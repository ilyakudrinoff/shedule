# Generated by Django 4.1.4 on 2023-05-02 15:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20, verbose_name='Имя контакта')),
                ('last_name', models.CharField(max_length=20, verbose_name='Фамилия контакта')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Фото')),
                ('status', models.CharField(choices=[('Коннектор', 'Коннектор'), ('Конденсатор', 'Конденсатор'), ('Проводник', 'Проводник'), ('Привратник', 'Привратник')], max_length=20, verbose_name='Статус')),
                ('krug', models.CharField(choices=[('Круг поддержки', 'Круг поддержки'), ('Круг продуктивности', 'Круг продуктивности'), ('Круг развития', 'Круг развития')], max_length=20, verbose_name='Круг контактов')),
                ('ois', models.CharField(choices=[('Опасен', 'Опасен'), ('Интересен', 'Интересен'), ('Сложен', 'Сложен')], max_length=20, verbose_name='ОИС')),
                ('first_info', models.TextField(verbose_name='Первичная информация')),
            ],
            options={
                'verbose_name': 'контакт',
                'verbose_name_plural': 'контакты',
                'ordering': ('krug',),
            },
        ),
        migrations.CreateModel(
            name='Sectors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, verbose_name='Сектор')),
            ],
            options={
                'verbose_name': 'сектор',
                'verbose_name_plural': 'секторы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('povedenie', models.CharField(choices=[('приверженность и интенсивность', 'приверженность и интенсивность'), ('инициатива и взаимность', 'инициатива и взаимность'), ('эмоциональная вовлеченность', 'эмоциональная вовлеченность'), ('открытость и доверие', 'открытость и доверие')], max_length=50, verbose_name='Поведение')),
                ('results', models.IntegerField(verbose_name='Результат')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ship_contact', to='contacts.contacts', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'отношение',
                'verbose_name_plural': 'отношения',
                'ordering': ('contact',),
            },
        ),
        migrations.CreateModel(
            name='PreMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, verbose_name='Имя встречи')),
                ('problem', models.CharField(choices=[('Что сделать для развития отношений', 'Что сделать для развития отношений'), ('Как узнать больше о человеке', 'Как узнать больше о человеке'), ('Что я могу дать', 'Что я могу дать'), ('Что я могу попросить', 'Что я могу попросить'), ('Как обеспечить следующую встречу', 'Как обеспечить следующую встречу')], max_length=50, verbose_name='Проблемы')),
                ('plan', models.TextField(verbose_name='План развития отношений')),
                ('result', models.TextField(verbose_name='Результат встречи')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meet_contact', to='contacts.contacts', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'предвстреча',
                'verbose_name_plural': 'предвстречи',
                'ordering': ('contact',),
            },
        ),
        migrations.CreateModel(
            name='Facts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fact', models.TextField(verbose_name='Факт')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fact_contact', to='contacts.contacts', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'факт',
                'verbose_name_plural': 'факты',
                'ordering': ('contact',),
            },
        ),
        migrations.AddField(
            model_name='contacts',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sector', to='contacts.sectors', verbose_name='Сектор'),
        ),
        migrations.AddField(
            model_name='contacts',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
